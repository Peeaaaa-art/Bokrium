
<!-- HTML部分 -->
<section class="layout-intro mt-5" data-controller="animation">
  <h2 class="fade-in delay-1">選べる5つの本棚レイアウト</h2>
  <div class="layouts">
    <div class="card shelf_icon slide-in delay-2"><i class="bi bi-bookshelf fs-5 icon-refined"></i><span class="text-muted">本棚</span></div>
    <div class="card shelf_icon slide-in delay-3"><i class="bi bi-layout-three-columns fs-5 icon-refined"></i> <span class="text-muted">背表紙</span></div>
    <div class="card shelf_icon slide-in delay-4"><i class="bi bi-file fs-5 icon-refined"></i> <span class="text-muted">カード</span></div>
    <div class="card shelf_icon slide-in delay-5"><i class="bi bi-layout-sidebar-inset fs-5 icon-refined"></i> <span class="text-muted">リスト</span></div>
    <div class="card shelf_icon slide-in delay-6"><i class="bi bi-table fs-5 icon-refined"></i><span class="text-muted"> 表形式</span></div>
  </div>
</section>

<!-- CSS部分 -->
<style>
.layout-intro {
  text-align: center;
  padding: 3rem 1rem;
  background: #fffaf4;
}

.layouts {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1.5rem;
  margin-top: 2rem;
}

.shelf_icon {
  background: #f9f9f9;
  width: 6rem;              /* 任意。高さと一致させる */
  height: 6rem;
  display: flex;            /* 中央揃え用 */
  align-items: center;
  justify-content: center;
  border-radius: 50%;       /* ← これで完全な円に */
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  font-size: 0.9rem;
  text-align: center;
  flex-direction: column
}

.fade-in, .slide-in {
  opacity: 0;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
  animation-timing-function: ease;
}

.fade-in {
  transform: translateY(20px);
  animation-name: fadeInUp;
}

.slide-in {
  transform: translateX(-50px);
  animation-name: slideIn;
}

@keyframes fadeInUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideIn {
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.delay-1 { animation-delay: 0.2s; }
.delay-2 { animation-delay: 0.4s; }
.delay-3 { animation-delay: 0.6s; }
.delay-4 { animation-delay: 0.8s; }
.delay-5 { animation-delay: 1.0s; }
.delay-6 { animation-delay: 1.2s; }
</style>

<!-- Stimulus Controller (animation_controller.js) -->
<script type="module">
  import { Controller } from "@hotwired/stimulus"

  export default class extends Controller {
    connect() {
      const animated = this.element.querySelectorAll('.fade-in, .slide-in')

      const observer = new IntersectionObserver(entries => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.style.animationPlayState = 'running'
            observer.unobserve(entry.target)
          }
        })
      }, { threshold: 0.2 })

      animated.forEach(el => {
        el.style.animationPlayState = 'paused'
        observer.observe(el)
      })
    }
  }
</script>


<div class="container">
  <%= lazy_image_tag "bookshelfs_views.png", alt: "Bokriumの本棚レイアウト", class: "img-fluid mb-5 align" %>
</div>